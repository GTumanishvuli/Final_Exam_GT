Summary document: tls_summary.txt

In this task, I analyzed how TLS works by connecting to an HTTPS website and capturing the handshake.
1. OpenSSL Connection to HTTPS Website
I connected to www.pinterest.com using OpenSSL.
From the output, I extracted:
•	Certificate Chain:
-	Root: DigiCert Global Root G2
-	Intermediate: DigiCert Global G2 TLS RSA SHA256 2020 CA1
-	Leaf: *.pinterest.com
•	Cipher Suite Used:
-	TLS_AES_128_GCM_SHA256
-	AES-128 in Galois/Counter Mode with SHA-256 for authentication
•	TLS Version:
-	TLSv1.3
The server’s certificate is signed by DigiCert and uses RSA 2048-bit keys.

2. TLS Handshake Capture with Wireshark
Using Wireshark, I captured the TLS 1.3 handshake.
Important stages highlighted:
•	Client Hello:
-	The client sends supported cipher suites and key share.
•	Server Certificate:
-	In TLS 1.3, the server certificate is encrypted inside Application Data after Server Hello, not seen clearly in plain text.
•	Key Exchange:
-	The key exchange happens during Client Hello and Server Hello using ECDHE (Elliptic Curve Diffie-Hellman Ephemeral).

3. How TLS Provides Confidentiality and Integrity
TLS provides confidentiality by encryption of all data using symmetric encryption (AES-GCM), based on shared secret generated through secure key exchange.
TLS ensures integrity by using AEAD ciphers (like AES-GCM) that provide both encryption and authentication.
This prevents attackers from reading or modifying data.
In TLS 1.3, confidentiality and integrity protection start after Server Hello is finished.


